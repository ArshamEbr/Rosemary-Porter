#!/usr/bin/env bash

nd=$nd
file="$file"
mkdir -p erofs/config 2>/dev/null

r="$(basename $file)"

r_name=$(echo $file | sed 's!.*\/!!' | awk -F"[.]" '{ print $1 }')
config="config/$r_name"
parts="$(echo "$r" | grep -o "PARTITION")"
exten=${r##*.}

super_dir=$local_dir/UnpackerSuper
opla=$(hexdump -C -n 20000 "$file" | grep -o "30 50 4c 41")
erofs="$(hexdump -C -n 2000 "$file" | grep -o 'e2 e1 f5 e0')"
sparse_super=$(hexdump -C -n 20000 "$file" | grep -o "3a ff 26 ed")

gg() {
  cd $local_dir/UnpackerSystem/erofs
  find "$r_name" -type f | grep [[:space:]] | while read a; do
    if [ ! -z "$(echo ${a##*/} | grep [[:space:]])" ]; then
      ff="${a%\/*}"/"$(echo ${a##*/} | sed 's! !_!g')"
      mv "$a" "$ff"
    fi
  done

  find "$r_name" -type d | grep [[:space:]] | while read a; do
    if [ ! -z "$(echo ${a##*/} | grep [[:space:]])" ]; then
      ff="${a%\/*}"/"$(echo ${a##*/} | sed 's! !_!g')"
      mv "$a" "$ff"
    fi
  done

  while read b; do
    u=$(grep -o "$b " "$config"/"$r_name"_fs_config)
    n=$(echo "$b" | sed 's! !_!g')
    if [ ! -z "$u" ]; then
      sed -i "s!$u!$n !" "$config"/"$r_name"_fs_config
    fi
  done <"$config"/"$r_name"_space.txt

  while read b; do
    u=$(grep -o "$b " "$config"/"$r_name"_file_contexts)
    n=$(echo "$b" | sed 's! !_!g')
    if [ ! -z "$u" ]; then
      sed -i "s!$u!$n !" "$config"/"$r_name"_file_contexts
    fi
  done <"$config"/"$r_name"_space.txt

  find "$r_name" -type d | sed 's!$!_d!' >"$config"/"$r_name"_f.txt
  find "$r_name" -type f | sed 's!$!_f!' >>"$config"/"$r_name"_f.txt
  find "$r_name" -type l | sed 's!$!_l!' >>"$config"/"$r_name"_f.txt

  find "$r_name" -type l | xargs tar -cf "$config"/"$r_name"_sim.tar

}

cd $local_dir/UnpackerSystem/erofs
echo
echo ".....$deleting_old_folder \""$r_name"\" $and_configuration_files..."

find -maxdepth 1 -name "$r_name" -type d | xargs rm -rf

if [ -f "$r_name" ]; then
  echo
  echo ".....$warning_file_name: "$PWD"/"$r_name" $already_exists"
  echo ".....$renaming "$r_name" -> "$r_name".real.img"
  echo
  mv -f "$r_name" "$r_name".real.img
fi

rm -f ./fs_config ./file_contexts
rm -rf "$config"

if [ -f "$file" ]; then
  echo
  echo ".....$unpacking ${file}..."
  echo
  rm -f config/exception.log
  if [ $ARCH == x86_64 ]; then
    mkfs="mkfs.erofs"
    extract.erofs64 -x -f -i "$file" 1>/dev/null
  #fsck.erofs --force --extract="$r_name" "$file"

  #extract.erofs64 -x --only-cfg -i "$file"

  else
    mkfs="mkfs.erofs32"
    extract.erofs -x -f -i "$file" 1>/dev/null
  fi

  if [ $(echo $?) -eq "0" -a ! -s config/exception.log ]; then
    mkdir -p "$config"
    mv -f config/"$r_name"_file_contexts config/"$r_name"/"$r_name"_file_contexts
    mv -f config/"$r_name"_fs_config config/"$r_name"/"$r_name"_fs_config
    mv -f config/"$r_name"_fs_options config/"$r_name"/"$r_name"_fs_options

    echo "$f_name" >$local_dir/UnpackerSystem/erofs/"$config"/"$r_name"_name.txt

    expr $(du -s "$r_name" | awk '{ print $1 }') \* 1024 >"$config"/"$r_name"_size.txt

    size_basic="$(cat "$config"/"$r_name"_size.txt)"

    echo make_ext4fs -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_basic" -a /"$r_name" '$outdir'/"$r_name".new.img $r_name >"$config"/"$r_name"_pack.sh

    echo make_ext4fs -s -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_basic" -a /"$r_name" '$outdir'/"$r_name".new.img $r_name >"$config"/"$r_name"_pack_sparse.sh

    #a="--fs-config-file=./"$config"/"$r_name"_fs_config"
    #b="--file-contexts=./"$config"/"$r_name"_file_contexts"
    #c='$outdir'/"$r_name".new.img
    #cat "$config"/"$r_name"_fs_options | grep "mkfs.erofs" | awk -F "options:       " '{ print "mkfs.erofs"$2 }' | awk -v a="$a" -v b="$b" -v c="$c" '{ print $1" "$2" "$3" "$4" "$5" "$6" "$7" "a" "b" "c" "$11}' > "$config"/"$r_name"_pack_erofs.sh

    #cat "$config"/"$r_name"_fs_options | grep "mkfs.erofs" | awk -F "options:" '{ print "mkfs.erofs"$2 }' | awk -v a="--fs-config-file=./"$config"/"$r_name"_fs_config" -v b="--file-contexts=./"$config"/"$r_name"_file_contexts" -v c='$outdir'/"$r_name".new.img '{ print $1" "$2" -E^xattr-name-filter "$3$4" "$5$6" "$7" --product-out=./ "a" "b" "c" "$11}' > "$config"/"$r_name"_pack_erofs.sh

    line_pack="$(cat "$config"/"$r_name"_fs_options | grep "mkfs.erofs")"

    z="$(echo "$line_pack" | awk '{ print $3 }')"
    t="$(echo "$line_pack" | awk '{ print $5 }')"
    u="$(echo "$line_pack" | awk '{ print $7 }')"

    echo "$mkfs" "$z" -E^xattr-name-filter -T"$t" -U"$u" --mount-point=/"$r_name" --product-out=./ --fs-config-file=./"$config"/"$r_name"_fs_config --file-contexts=./"$config"/"$r_name"_file_contexts '$outdir'/"$r_name".new.img ./"$r_name" >"$config"/"$r_name"_pack_erofs.sh

    if [ -d ./"$r_name" -a -s "$config"/"$r_name"_fs_config ]; then
      sed -i '/logd / s!0x4000040000040!0x440000040!' "$config"/"$r_name"_fs_config
      find "$r_name" -type d | sed 's!$!_d!' >"$config"/"$r_name"_f.txt
      find "$r_name" -type f | sed 's!$!_f!' >>"$config"/"$r_name"_f.txt
      find "$r_name" -type l | sed 's!$!_l!' >>"$config"/"$r_name"_f.txt

      find "$r_name" -type d -exec stat -c '%N %u %g %a' {} \; | sed 's!$! _d!' >"$config"/"$r_name"_avto_f.txt
      find "$r_name" -type f -exec stat -c '%N %u %g %a' {} \; | sed 's!$! _f!' >>"$config"/"$r_name"_avto_f.txt
      find "$r_name" -type l -exec stat -c '%N %u %g %a' {} \; | sed 's!$! _l!' | sed -e s!\'!!g >>"$config"/"$r_name"_avto_f.txt

      if [ ! -z "$(find "$r_name" -type l)" ]; then
        find "$r_name" -type l | xargs tar -cf "$config"/"$r_name"_sim.tar
      fi
    else
      echo
      echo ".....$error_no_unpacked_folder_or "$config"/"$r_name"_fs_config."
    fi

    h=$(find "$r_name" | grep [[:space:]])

    vv="$r_name"

    check_sar() {
      if [ -f "$vv/system/build.prop" ]; then
        #echo "$sar"
        sar=true
        return 0
      else
        sar=false
        return 1
      fi
    }
    check_sar

    >"$config"/"$r_name"_gg_d.txt
    find "$vv" -maxdepth 1 ! -path 'lost+found' -a ! -path "$vv" -type d | while read a; do
      echo
      find "$a" ! -path 'lost+found' -a ! -path "$vv" -type d | xargs stat -c '%N %u %g %a' 2>/dev/null | awk -F"/" '!($1 $2 $3 in a) {a[$1 $2 $3];print}'
    done >>"$config"/"$r_name"_gg_d.txt

    >"$config"/"$r_name"_tmp_f.txt
    find "$vv" -maxdepth 1 ! -path 'lost+found' -type d | while read a; do
      echo
      find "$a" ! -path 'lost+found' -type f | xargs stat -c '%N %u %g %a' 2>/dev/null
    done >>"$config"/"$r_name"_tmp_f.txt
    cat "$config"/"$r_name"_tmp_f.txt | awk '!($0 in a) {a[$0];print}' >"$config"/"$r_name"_gg_f.txt && rm -f "$config"/"$r_name"_tmp_f.txt

    #new
    contet() {
      >"$config"/"$r_name".txt
      find ./"$r_name" -maxdepth 1 -type d | sed 's!\.!!' | while read a; do
        a="$(echo "$a" | sed 's!\.!\\\\\.!g')"
        grep "$a " "$config"/"$r_name"_file_contexts | awk '{ print $2 }' >>"$config"/"$r_name".txt
      done
      rrrr_name="$(echo "$r_name" | sed 's!\.!\\\\\.!g')"
      con_nosar="$(cat "$config"/"$r_name".txt | sort | uniq -c | sort -nk1 | tail -1 | awk '{print $2}')"
      real_name="/${rrrr_name}(/.*)? "

      if [ ! -z "$(echo "$rrrr_name" | grep "^persist")" ]; then
        real_con="/${rrrr_name}(/.*)? u:object_r:persist_data_file:s0"
      else
        real_con="/${rrrr_name}(/.*)? ${con_nosar}"
      fi
      if [ -z "$(grep "^$real_name" "$config"/"$r_name"_file_contexts)" ]; then
        i=1
        sed -i -e "$i s!^!${real_con}\n!" "$config"/"$r_name"_file_contexts
        if [ $(echo $?) -eq 0 ]; then
          echo ".....$recording_in \"${r_name}_file_contexts\"..."
        fi
      fi
      rm -f "$config"/"$r_name".txt
      return
    }

    con_sar() {
      con_name="$(echo "${r_name}" | sed 's!\.!\\\\\.!g')"
      con1="/${con_name}/"
      con2="/${con_name}(/.*)? "
      con3="/${con_name}/system(/.*)? "

      if [ -z "$(grep "^${con1} " "$config"/"${r_name}"_file_contexts)" ]; then
        con1="/${con_name}/ u:object_r:rootfs:s0"
        i=1
        sed -i -e "$i s!^!${con1}\n!" "$config"/${r_name}_file_contexts
      fi
      if [ -z "$(grep "^${con2}" "$config"/"${r_name}"_file_contexts)" ]; then
        con2="/${con_name}(/.*)? u:object_r:rootfs:s0"
        i=2
        sed -i -e "$i s!^!${con2}\n!" "$config"/${r_name}_file_contexts
      fi
      if [ -z "$(grep "^${con3}" "$config"/"${r_name}"_file_contexts)" ]; then
        con3="/${con_name}/system(/.*)? u:object_r:system_file:s0"
        i=3
        sed -i -e "$i s!^!${con3}\n!" "$config"/${r_name}_file_contexts
      fi
      return 0
    }

    str_avb() {
      base_dir=$local_dir/UnpackerSystem/erofs
      img_name=$(cat $local_dir/UnpackerSystem/erofs/"$config"/"$r_name"_name.txt)

      #awk '!($0 in a) {a[$0];print}' "$base_dir"/"$config"/"$r_name"_file_contexts > "$base_dir"/"$config"/"$r_name"_file_contexts.tmp && mv -f "$base_dir"/"$config"/"$r_name"_file_contexts.tmp "$base_dir"/"$config"/"$r_name"_file_contexts

      cat "$base_dir"/"$config"/"$r_name"_f.txt | grep "_d$" | sed 's!_d$!!' | while read x; do
        x="$(echo "$x" | sed 's!\.!\\\\.!g')"
        cat "$base_dir"/"$config"/"$r_name"_file_contexts | grep "^/$x " | grep -v "/ " | awk '{ print $1"(/.*)?"" "$2 }2'
      done >>"$base_dir"/"$config"/"$r_name"_file_contexts
      cat "$base_dir"/"$config"/"$r_name"_file_contexts | sort -u >"$base_dir"/"$config"/a.txt && mv -f "$base_dir"/"$config"/a.txt "$base_dir"/"$config"/"$r_name"_file_contexts

      if [ "$sar" == "true" ]; then
        if [ -f "$base_dir"/${r_name}/system/etc/selinux/plat_file_contexts ]; then
          cp "$base_dir"/${r_name}/system/etc/selinux/plat_file_contexts "$base_dir"/"$config"/${r_name}_file_contexts_orig && sed -i "s!^/!/${r_name}/!" "$base_dir"/"$config"/${r_name}_file_contexts_orig
        fi

        con_sar #функция для SAR

        echo '.....Detected image "System as Root"'

      elif [ "$sar" == "false" ]; then

        echo '.....Detected image not "System as Root"'
        contet #функция для не SAR
      fi

      dir_avb=$local_dir/UnpackerSystem/erofs/config

      q="$(basename $file)"
      file_exten_raw="$(echo "$img_name" | grep -o "raw$")"
      file_exten_avb=${q##*.}
      if [ "$file_exten_avb" == "PARTITION" -a -z "$file_exten_raw" ]; then
        file_avb="/$nd"/"$img_name".PARTITION
      elif [ "$file_exten_avb" == "win" -a -z "$file_exten_raw" ]; then
        file_avb="/$nd"/"$img_name".win
      else
        file_avb="/$nd"/"$img_name".img
      fi

      full_avb="$(avbtool info_image --image "$file_avb" 2>"$dir_avb"/"$r_name"/"$r_name"_avb.log)"

      if [ ! -z "$(echo "$full_avb" | grep -Eo "Image Size:|VBMeta offset:")" ]; then

        echo "$full_avb" | awk '/Partition Name:/ { print $3 }' >"$dir_avb"/"$r_name"/"$r_name"_part_name.txt
        echo "$full_avb" >"$dir_avb"/"$r_name"/"$r_name"_avb.img
        echo
        echo ".....$find_struct AVB!"

        if test -s "$dir_avb"/"$r_name"/"$r_name"_avb.img; then

          aik_mob="2"

          . $binary_dir/binary/extract_key "$file_avb"

          echo 'make_ext4fs -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_avb" -a /"$pack_d" "$outdir"/"$pack_d".new.img $pack_d' >"$dir_avb"/"$r_name"/"$r_name"_pack_avb.sh

          echo 'make_ext4fs -s -J -T -1 -S ./file_contexts -C ./fs_config -l "$size_avb" -a /"$pack_d" "$outdir"/"$pack_d".new.img $pack_d' >"$dir_avb"/"$r_name"/"$r_name"_pack_avb_sparse.sh

        else
          echo
          echo ".....$error_creating_configuration_file!"
          echo
        fi
      elif [ ! -z "$(cat "$dir_avb"/"$r_name"/"$r_name"_avb.log | grep -Eo "Given image does")" ]; then
        echo >/dev/null
      else
        echo
        echo ".....$discovery_error AVB!"
        echo
      fi
      return
    }
    str_avb

    if test -s "$config"/"$r_name"*_space.txt; then
      echo
      echo ".....$in_image "${file}" $there_files_with_spaces_fixed_saved_to "$base_dir"/"$config"/"$r_name"_space.txt!"
      echo
    fi

    if [ ! -z "$h" ]; then
      echo
      echo -e "\033[33;1m.....$successfully_unpacked! \033[0m"
      echo
      echo "...$in_image "${file}" $there_files_with_spaces_fix..."
      echo "$h" >"$config"/"$r_name"_space.txt

      gg

      if [ $(echo $?) -eq 0 ]; then

        echo
        echo "...$corrected_saved_to "$config"/"$r_name"_space.txt!"
        echo
      else
        echo
        echo "...$error_fixing_files_with_spaces!"
        echo
      fi
    else
      echo
      echo -e "\033[33;1m.....$successfully_unpacked! \033[0m"
      echo
    fi
  else

    echo
    echo -e "\033[31;47;1m ...$error_incorrect_extraction_of_files
 $folder $local_dir/UnpackerSystem/erofs/$r_name $will__not_available_for_assembly_in ext4!             \033[0m"
    echo
    rm -rf "$config" config/"$r_name"_fs_config config/"$r_name"_file_contexts config/"$r_name"_fs_options
  fi
else
  echo
  echo ".....$image11 "$file" $is_absent $in_folder11: $local_dir/UnpackerSystem."
  echo
fi
