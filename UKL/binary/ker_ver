#!/usr/bin/env bash
dir_ver=$binary_dir
file="$1"

kernel_ver="$(strings "$file" | awk '/Linux version/  { print $3 }' | head -1 | awk -F"-" '{ print $1 }')" 2>/dev/null
kernel_bit="$(strings "$file" | grep -Eo "arch/arm.." | head -1 | sed 's!/.!!2')" 2>/dev/null
kernel_prop="$(find ramdisk -maxdepth 1 -name "prop.default" -type f | sed 's!^./!!')"
if test -s "$kernel_prop"; then
  kernel_bit3="$(awk -F"=" '/ro.product.cpu.abilist64=arm64*/ { print $2 }' "$kernel_prop")"
fi

python3 "$dir_ver"/bin_system/find_gz.py "$file" "1f8b08"
if [ -f "kernel.gz" ]; then
  gunzip -f kernel.gz 2>/dev/null || rm -f kernel.gz
fi

if [ ! -z "$kernel_ver" ]; then
  echo
  echo "...$kernel_version: $kernel_ver"
else

  if [ -f "kernel" ]; then
    kernel_ver1="$(strings kernel | awk '/Linux version/  { print $3 }' | head -1 | awk -F"-" '{ print $1 }')"
    echo
    echo "...$kernel_version: $kernel_ver1"
  fi
fi
#fi

if [ ! -z "$kernel_bit" ]; then
  if [ "$kernel_bit" == "arch/arm64" ]; then
    echo "...$kernel_bitness: 64 bit"
  elif [ "$kernel_bit" == "arch/arm" ]; then
    echo "...$kernel_bitness: 32 bit"
  fi
elif [ ! -z "$kernel_bit3" ]; then
  echo "...$kernel_bitness: 64 bit"
else

  if [ -f "kernel" ]; then
    kernel_bit1="$(strings kernel | grep -Eo "arch/arm.." | head -1 | sed 's!/.!!2')"
    kernel_bit2="$(strings kernel | grep -Eo "Linux/arm.." | head -1 | sed 's!/.!!2')"
    if [ "$kernel_bit1" == "arch/arm64" -o "$kernel_bit2" == "Linux/arm64" ]; then
      echo "...$kernel_bitness: 64 bit"
    elif [ "$kernel_bit1" == "arch/arm" -o "$kernel_bit2" == "Linux/arm" ]; then
      echo "...$kernel_bitness: 32 bit"
    fi
  fi
fi
rm -f kernel
